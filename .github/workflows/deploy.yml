name: CD Pipeline

on:
  push:
    branches:
      - final

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t akshay737/hello-world-nodejs .

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push Docker image
        run: docker push akshay737/hello-world-nodejs

      - name: Configure AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-west-1

      - name: Create directory for Terraform files
        run: mkdir -p ${{ github.workspace }}/terraform-eks

      - name: Check S3 bucket contents (for debugging)
        run: aws s3 ls s3://aws-ecs-fargate-tf-cf/terraform --recursive

      - name: Download Terraform files from S3
        run: aws s3 sync s3://aws-ecs-fargate-tf-cf/terraform ${{ github.workspace }}/terraform-eks

      - name: List downloaded files (for debugging)
        run: ls -R ${{ github.workspace }}/terraform-eks

      - name: List current directory (for debugging)
        run: ls -R ${{ github.workspace }}

      - name: Verify Terraform files
        run: |
          if ! ls ${{ github.workspace }}/terraform-eks/*.tf >/dev/null 2>&1; then
            echo "Error: No .tf files found in ${{ github.workspace }}/terraform-eks"
            exit 1
          fi

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ github.workspace }}/terraform-eks

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{ github.workspace }}/terraform-eks
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
